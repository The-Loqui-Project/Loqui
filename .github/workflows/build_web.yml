name: Build Web

on:
  push:
    branches:
      - '**'
    paths:
      - 'apps/web/**'
      - 'packages/**'
      - 'pnpm-lock.yaml'
      - '.github/workflows/build_web.yml'
  pull_request:
    paths:
      - 'apps/web/**'
      - 'packages/**'
      - 'pnpm-lock.yaml'
      - '.github/workflows/build_web.yml'
  workflow_dispatch:

jobs:
  build_web:
    name: Build Web
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'

      - name: Install pnpm
        uses: pnpm/action-setup@v2
        with:
          version: 9
          run_install: false

      - name: Get pnpm store directory
        id: pnpm-cache
        shell: bash
        run: |
          echo "STORE_PATH=$(pnpm store path)" >> $GITHUB_OUTPUT

      - name: Setup pnpm cache
        uses: actions/cache@v3
        with:
          path: ${{ steps.pnpm-cache.outputs.STORE_PATH }}
          key: ${{ runner.os }}-pnpm-store-${{ hashFiles('**/pnpm-lock.yaml') }}
          restore-keys: |
            ${{ runner.os }}-pnpm-store-

      - name: Install dependencies
        run: pnpm install

      - name: Update meta.ts with branch and commit
        run: |
          BRANCH="${GITHUB_REF#refs/heads/}"
          if [[ "$GITHUB_REF" == refs/tags/* ]]; then
            BRANCH="${GITHUB_REF#refs/tags/}"
          fi
          COMMIT=$(git rev-parse --short HEAD)
          sed -i "s|export const branch: null \| string = null|export const branch: null \| string = '${BRANCH}'|" packages/meta/meta.ts
          sed -i "s|export const commit: null \| string = null|export const commit: null \| string = '${COMMIT}'|" packages/meta/meta.ts
      
      - name: Determine URL variables based on branch
        id: set-urls
        run: |
          BRANCH="${GITHUB_REF#refs/heads/}"
          if [[ "$GITHUB_REF" == refs/tags/* ]]; then
            BRANCH="${GITHUB_REF#refs/tags/}"
          fi
          
          if [[ "$BRANCH" == "prod" ]]; then
            echo "CURRENT_URL=${{ vars.PROD_CURRENT_URL }}" >> $GITHUB_OUTPUT
            echo "API_URL=${{ vars.PROD_API_URL }}" >> $GITHUB_OUTPUT
            echo "Using production URLs for branch: $BRANCH"
          else
            echo "CURRENT_URL=${{ vars.STAGING_CURRENT_URL }}" >> $GITHUB_OUTPUT
            echo "API_URL=${{ vars.STAGING_API_URL }}" >> $GITHUB_OUTPUT
            echo "Using staging URLs for branch: $BRANCH"
          fi

      - name: Build Web
        run: |
          cd apps/web
          CURRENT_URL="${{ steps.set-urls.outputs.CURRENT_URL }}" API_URL="${{ steps.set-urls.outputs.API_URL }}" pnpm run build
