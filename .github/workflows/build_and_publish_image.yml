name: Build and push Docker image to container registry
on:
    push:
        branches:
            - '**'
        tags:
            - 'v*.*.*'

jobs:
    skip_duplicate_jobs:
        name: Skip duplicate jobs
        continue-on-error: true
        runs-on: ubuntu-latest
        # Map a step output to a job output
        outputs:
            should_skip: ${{ steps.skip_check.outputs.should_skip }}
        steps:
            - id: skip_check
              uses: fkirc/skip-duplicate-actions@v5
              with:
                  paths_ignore: '["**/README.md", "**/docs/**", "**/.gitignore", "**/LICENSE"]'
                  concurrent_skipping: never
                  skip_after_successful_duplicate: false

    build_and_push_docker_images_to_container_registry:
        name: Build and push Docker images to container registry
        runs-on: ubuntu-latest
        needs: skip_duplicate_jobs
        if: needs.skip_duplicate_jobs.outputs.should_skip != 'true'

        steps:
            - name: Set up QEMU
              uses: docker/setup-qemu-action@v3
            
            - name: Set up Docker Buildx
              uses: docker/setup-buildx-action@v3
              with:
                buildkitd-flags: --debug

            - name: Log in to GitHub Container Registry
              uses: docker/login-action@v3
              with:
                  registry: ghcr.io
                  username: ${{ github.actor }}
                  password: ${{ secrets.GITHUB_TOKEN }}

            - name: Generate Docker metadata
              id: meta
              uses: docker/metadata-action@v5
              with:
                  images: |
                      ghcr.io/${{ github.repository }}
                  labels: |
                      org.opencontainers.image.title=Loqui
                      org.opencontainers.image.description=See the [repository](https://github.com/The-Loqui-Project/Loqui).
                      org.opencontainers.image.vendor=The Loqui Project
                  tags: |
                      type=schedule
                      type=ref,event=branch
                      type=ref,event=pr
                      type=semver,pattern={{version}}
                      type=semver,pattern={{major}}.{{minor}}
                      type=semver,pattern={{major}}
                      type=sha
                      type=raw,value=latest,enable={{is_default_branch}}

            - name: Checkout
              uses: actions/checkout@v4

            - name: Set up cache for pnpm
              uses: actions/cache@v3
              id: pnpm-cache
              with:
                  path: |
                    /pnpm
                    ~/.pnpm-store
                  key: ${{ runner.os }}-pnpm-${{ hashFiles('**/pnpm-lock.yaml') }}
                  restore-keys: |
                    ${{ runner.os }}-pnpm-

            - name: Update meta.ts with branch and commit
              run: |
                BRANCH="${GITHUB_REF#refs/heads/}"
                if [[ "$GITHUB_REF" == refs/tags/* ]]; then
                  BRANCH="${GITHUB_REF#refs/tags/}"
                fi
                COMMIT=$(git rev-parse --short HEAD)
                sed -i "s|export const branch: null \| string = null|export const branch: null \| string = '${BRANCH}'|" packages/meta/meta.ts
                sed -i "s|export const commit: null \| string = null|export const commit: null \| string = '${COMMIT}'|" packages/meta/meta.ts

            - name: Build and push Docker image
              uses: docker/build-push-action@v6
              with:
                  context: .
                  file: Dockerfile
                  push: true
                  tags: ${{ steps.meta.outputs.tags }}
                  labels: ${{ steps.meta.outputs.labels }}
                  cache-from: type=gha
                  cache-to: type=gha,mode=max
                  platforms: linux/amd64,linux/arm64
                  build-args: |
                    BUILDKIT_INLINE_CACHE=1
